on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.set_version.outputs.version }}
      backend_image: ${{ steps.set_tags.outputs.backend_image }}
      frontend_image: ${{ steps.set_tags.outputs.frontend_image }}

    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set version
        id: set_version
        run: |
          VERSION=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 8)
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"
          echo "VERSION=${VERSION}" >> "$GITHUB_ENV"
      
      - name: Set image tags using current UTC date/time
        id: set_tags
        run: |
          export TZ="America/Chicago"
          TIMESTAMP=$(date +"%m%d-%I%M%p")

          # Construct the full Docker image references
          BACKEND_IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:backend-${TIMESTAMP}"
          FRONTEND_IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:frontend-${TIMESTAMP}"

          echo "backend_image=${BACKEND_IMAGE}" >> "$GITHUB_OUTPUT"
          echo "frontend_image=${FRONTEND_IMAGE}" >> "$GITHUB_OUTPUT"

          echo "Generated backend image: ${BACKEND_IMAGE}"
          echo "Generated frontend image: ${FRONTEND_IMAGE}"

          echo "backend_tag=backend-${TIMESTAMP}" >> "$GITHUB_OUTPUT"
          echo "frontend_tag=frontend-${TIMESTAMP}" >> "$GITHUB_OUTPUT"
          
          echo "Generated backend tag: backend-${TIMESTAMP}"
          echo "Generated frontend tag: frontend-${TIMESTAMP}"

      - name: Build and push Backend Docker image
        uses: ./.github/actions/docker-image
        with:
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_repo: ${{ secrets.DOCKERHUB_REPO }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
          dockerfile: Dockerfile.backend
          image_tag: ${{ steps.set_tags.outputs.backend_tag }}
      
      - name: Build and push Frontend Docker image
        uses: ./.github/actions/docker-image
        with:
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_repo: ${{ secrets.DOCKERHUB_REPO }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
          dockerfile: Dockerfile.frontend
          image_tag: ${{ steps.set_tags.outputs.frontend_tag }}

  # test:
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Test Python
  #       uses: ./.github/actions/test-python
  #       with:
  #         docker_image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:${{ needs.build.outputs.backend_tag }}

  deploy:
      runs-on: ubuntu-latest
      needs: [build]
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1  # or your region

        - name: Install Terraform
          uses: hashicorp/setup-terraform@v2

        - name: Terraform Init
          working-directory: ./terraform
          run: terraform init

        - name: Terraform Plan
          working-directory: ./terraform
          run: |
            echo "Running Terraform plan with backend_image=${{ needs.build.outputs.backend_image }} and frontend_image=${{ needs.build.outputs.frontend_image }}"
            terraform plan \
              -var "backend_image=${{ needs.build.outputs.backend_image }}" \
              -var "frontend_image=${{ needs.build.outputs.frontend_image }}"
        

        - name: Terraform Apply
          working-directory: ./terraform
          run: terraform apply -auto-approve \
            -var="backend_image=${{ needs.build.outputs.backend_image }}" \
            -var="frontend_image=${{ needs.build.outputs.frontend_image }}"